<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--
        查找com.bdqn包下的所有类
        只要被 @Service @Controller ....等注解标记
        那么spring容器会自动为其创建一个bean
    -->
    <context:component-scan base-package="com.bjdx"/>

    <!-- 开启注解驱动 -->
    <mvc:annotation-driven />

    <!-- 数据源 c3p0 (dbcp)-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 驱动 -->
        <property name="driverClass" value="com.mysql.jdbc.Driver" />

        <!-- 连接字符串 -->
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/paper"/>

        <!-- 用户名 -->
        <property name="user" value="root"/>

        <!-- 密码 -->
        <property name="password" value="xiong"/>

        <!-- 初始化连接数 -->
        <property name="initialPoolSize" value="5" />

        <!-- 最小连接数 -->
        <property name="minPoolSize" value="5"/>

        <!-- 最大连接数 -->
        <property name="maxPoolSize" value="100"/>

        <!-- 闲置时间 -->
        <property name="maxIdleTime" value="60"/>

        <!-- 数据库连接池一次向服务器要对少个连接 -->
        <property name="acquireIncrement" value="5"/>

    </bean>

    <!-- sqlSessionFactory -->
    <bean id="SqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">

        <!-- 数据源 -->
        <!-- 找到当前bean所对应类中的 属性/对象，并为其注入一个... -->
        <property name="dataSource" ref="dataSource"/>

        <!-- mybatis配置文件 -->

        <!--
            SQL映射文件 *Mapper.xml
            通过spring 加载....com/bdqn/mapping 目录下 所有以Mapper.xml结尾的文件
        -->
        <property name="mapperLocations" value="classpath:com/bjdx/mapping/*Mapper.xml"/>
        <!--<property name="mapperLocations" value="classpath:com/bjdx/mapping/*Mapper.xml"/>-->

        <!-- 别名 -->
        <property name="typeAliasesPackage" value="com.bjdx.pojo"/>

    </bean>


    <!-- 让spring为dao层创建bean -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">

        <!-- 指定SqlSessionFactoryBean的名称 -->
        <property name="sqlSessionFactoryBeanName" value="SqlSessionFactoryBean"/>

        <!-- 指定dao接口所在的包 -->
        <property name="basePackage" value="com.bjdx.dao"/>

    </bean>

</beans>